'use client';

import { useEffect, useState } from 'react';

const unitOptions: Record<string, string[]> = {
  'р╕ир╕Ир╕к.р╕Ър╕Б.р╕кр╕Щр╕Б.1 р╕Щр╕Чр╕Ю.': ['р╕ир╕Ир╕к.р╕Щр╕Юр╕Д11 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д12 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д13 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д14 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д15 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д16 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕зр╕к.934 р╕кр╕Щр╕а.1 р╕Щр╕Чр╕Ю.'],
  'р╕ир╕Ир╕к.р╕Ър╕Б.р╕кр╕Щр╕Б.2 р╕Щр╕Чр╕Ю.': ['р╕ир╕Ир╕к.р╕Щр╕Юр╕Д21 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д22 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д23 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д24 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д25 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д26 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕зр╕к.909 р╕кр╕Щр╕а.2 р╕Щр╕Чр╕Ю.'],
  'р╕ир╕Ир╕к.р╕Ър╕Б.р╕кр╕Щр╕Б.3 р╕Щр╕Чр╕Ю.': ['р╕ир╕Ир╕к.р╕Щр╕Юр╕Д31 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д32 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д33 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д34 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д35 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д36 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕зр╕к.914 р╕кр╕Щр╕а.3 р╕Щр╕Чр╕Ю.'],
  'р╕ир╕Ир╕к.р╕Ър╕Б.р╕кр╕Щр╕Б.4 р╕Щр╕Чр╕Ю.': ['р╕ир╕Ир╕к.р╕Щр╕Юр╕Д41 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д42 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д43 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д44 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д45 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д46 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕зр╕к.912 р╕кр╕Щр╕а.4 р╕Щр╕Чр╕Ю.'],
  'р╕ир╕Ир╕к.р╕Ър╕Б.р╕кр╕Щр╕Б.5 р╕Щр╕Чр╕Ю.': ['р╕ир╕Ир╕к.р╕Щр╕Юр╕Д51 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д52 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д53 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д54 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д55 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕Д56 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕зр╕к.921 р╕кр╕Щр╕а.5 р╕Щр╕Чр╕Ю.'],
  'р╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б': ['р╕ир╕Ир╕к.р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Бр╕Бр╕к.р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Бр╕кр╕В.р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Бр╕к.1 р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Бр╕к.2 р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Бр╕к.3 р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Бр╕к.4 р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Бр╕к.5 р╕кр╕Чр╕Ю.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕кр╕кр╕Щ.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕кр╕Щр╕г.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕Щр╕Юр╕и.р╕Щр╕Чр╕Ю.', 'р╕ир╕Ир╕к.р╕ир╕Эр╕а.р╕Щр╕Чр╕Ю.'],
};

const allSubUnits = Object.values(unitOptions).flat();

export default function Admin() {
  const [records, setRecords] = useState<any[]>([]);
  const [filtered, setFiltered] = useState<any[]>([]);
  const [search, setSearch] = useState('');
  const [unitFilter, setUnitFilter] = useState('');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [volunteerTypeFilter, setVolunteerTypeFilter] = useState('');

  useEffect(() => {
    fetch('/api/all')
      .then((res) => res.json())
      .then((data) => {
        setRecords(data);
        setFiltered(data);
      });
  }, []);

  useEffect(() => {
    let data = [...records];

    if (unitFilter) {
      data = data.filter((rec) => rec.subUnit === unitFilter);
    }

    if (startDate) {
      data = data.filter((rec) => rec.date >= startDate);
    }

    if (endDate) {
      data = data.filter((rec) => rec.date <= endDate);
    }

    if (search.trim()) {
      const lowerSearch = search.toLowerCase();
      data = data.filter((rec) => rec.details.toLowerCase().includes(lowerSearch));
    }

    if (volunteerTypeFilter) {
      data = data.filter((rec) => rec.volunteerType === volunteerTypeFilter);
    }

    setFiltered(data);
  }, [search, unitFilter, startDate, endDate, records]);

  const handleEdit = (id: string, currentDetail: string) => {
  const newDetail = prompt('р╣Бр╕Бр╣Йр╣Др╕Вр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф', currentDetail);
  if (newDetail !== null) {
    fetch(`/api/update/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ details: newDetail }),
      })
      .then(() => location.reload());
    }
  };

const handleDelete = (id: string) => {
  if (confirm('р╕Др╕╕р╕Ур╣Бр╕Щр╣Ир╣Гр╕Ир╕лр╕гр╕╖р╕нр╣Др╕бр╣Ир╕зр╣Ир╕▓р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Щр╕╡р╣Й?')) {
    fetch(`/api/delete/${id}`, {
      method: 'DELETE',
    }).then(() => location.reload());
  }
};

  return (
    <div className="p-4 bg-gradient-to-br from-lime-200 to-teal-200 min-h-screen">
      <div className="max-w-6xl mx-auto bg-white/30 backdrop-blur-md border-4 border-blue-400 rounded-2xl shadow-xl overflow-x-auto p-6">
        <h1 className="text-2xl font-bold mb-6 text-center text-blue-700">
          ЁЯУК р╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕бр╕╣р╕е Admin
        </h1>

        <div className="mb-6 bg-white/50 border border-blue-300 p-4 rounded-lg shadow grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="flex flex-col">
            <label className="font-semibold text-sm text-blue-800 mb-1">р╕лр╕Щр╣Ир╕зр╕вр╕Зр╕▓р╕Щ</label>
            <select
              value={unitFilter}
              onChange={(e) => setUnitFilter(e.target.value)}
              className="border border-blue-400 rounded px-3 py-2"
            >
              <option value="">-- р╣Бр╕кр╕Фр╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф --</option>
              {allSubUnits.map((unit) => (
                <option key={unit} value={unit}>
                  {unit}
                </option>
              ))}
            </select>
          </div>

          <div className="flex flex-col">
            <label className="font-semibold text-sm text-blue-800 mb-1">р╕Хр╕▒р╣Йр╕Зр╣Бр╕Хр╣Ир╕зр╕▒р╕Щр╕Чр╕╡р╣И</label>
            <input
              type="date"
              value={startDate}
              onChange={(e) => setStartDate(e.target.value)}
              className="border border-blue-400 rounded px-3 py-2"
            />
          </div>

          <div className="flex flex-col">
            <label className="font-semibold text-sm text-blue-800 mb-1">р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓</label>
            <select
              value={volunteerTypeFilter}
              onChange={(e) => setVolunteerTypeFilter(e.target.value)}
              className="border border-blue-400 rounded px-3 py-2"
            >
              <option value="">-- р╣Бр╕кр╕Фр╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф --</option>
              <option value="р╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓р╕Юр╕▒р╕Тр╕Щр╕▓">р╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓р╕Юр╕▒р╕Тр╕Щр╕▓</option>
              <option value="р╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓р╕ар╕▒р╕вр╕Юр╕┤р╕Ър╕▒р╕Хр╕┤">р╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓р╕ар╕▒р╕вр╕Юр╕┤р╕Ър╕▒р╕Хр╕┤</option>
            </select>
          </div>

          <div className="flex flex-col">
            <label className="font-semibold text-sm text-blue-800 mb-1">р╕Цр╕╢р╕Зр╕зр╕▒р╕Щр╕Чр╕╡р╣И</label>
            <input
              type="date"
              value={endDate}
              onChange={(e) => setEndDate(e.target.value)}
              className="border border-blue-400 rounded px-3 py-2"
            />
          </div>

        </div>

          <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mt-4 mb-6">
            <div className="flex col-span-3">
              <input
                type="text"
                placeholder="р╕Др╣Йр╕Щр╕лр╕▓р╕Др╕│р╣Гр╕Щр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="border border-blue-400 rounded px-3 py-2 w-full"
              />
            </div>
            <button
              onClick={() => {
              const lowerSearch = search.toLowerCase();
              const data = records.filter((rec) =>
                rec.details.toLowerCase().includes(lowerSearch)
              );
              setFiltered(data);
            }}
            className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 w-20px rounded"
          >
            ЁЯФН р╕Др╣Йр╕Щр╕лр╕▓
            </button>
          </div>

        <table className="w-full table-auto border border-blue-300 rounded-lg overflow-hidden text-sm">
          <thead className="bg-gradient-to-r from-lime-300 to-teal-200 text-gray-800">
            <tr>
              <th className="border px-4 py-2">р╕лр╕Щр╣Ир╕зр╕вр╕Зр╕▓р╕Щ</th>
              <th className="border px-4 py-2">р╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕Ир╕┤р╕Хр╕нр╕▓р╕кр╕▓</th>
              <th className="border px-4 py-2">р╕зр╕▒р╕Щр╕Чр╕╡р╣И</th>
              <th className="border px-4 py-2">р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф</th>
            </tr>
          </thead>
          <tbody>
            {filtered.map((rec, idx) => (
              <tr key={idx} className="even:bg-white/50 odd:bg-white/30 transition hover:bg-yellow-50">
                <td className="border px-4 py-2 ">{rec.subUnit}</td>
                <td className="border px-4 py-2">{rec.volunteerType}</td>
                <td className="border px-4 py-2">{rec.date}</td>
                <td className="border px-4 py-2 whitespace-pre-wrap break-words relative group" title={rec.details}>
                  {rec.details}
                  <div className='mt-2 flex gap-2'>
                    <button
                      onClick={() => navigator.clipboard.writeText(rec.details)}
                      className="bg-blue-500 hover:bg-blue-600  hover:pointer text-white font-semibold py-1 px-3 rounded shadow-md transition duration-200"
                    >
                      ЁЯУЛ Coppy
                    </button>
                    <button
                      onClick={() => handleEdit(rec._id, rec.details)}
                      className="bg-yellow-400 hover:bg-yellow-500 hover:pointer text-white font-semibold py-1 px-3 rounded shadow-md transition duration-200"
                    >
                      тЬПя╕П Edit
                    </button>
                    <button
                      onClick={() => handleDelete(rec._id)}
                      className="bg-red-500 hover:bg-red-600 hover:pointer text-white font-semibold py-1 px-3 rounded shadow-md transition duration-200"
                    >
                      ЁЯЧСя╕П Delete
                    </button>

                  </div>
                </td>
              </tr>
            ))}
            {filtered.length === 0 && (
              <tr>
                <td colSpan={3} className="text-center py-6 text-gray-500">
                  р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕гр╕Зр╕Бр╕▒р╕Ър╣Ар╕Зр╕╖р╣Ир╕нр╕Щр╣Др╕Вр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
}
